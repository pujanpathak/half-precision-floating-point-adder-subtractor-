$comment
	File created using the following command:
		vcd file ExponentSubtractor.msim.vcd -direction
$end
$date
	Thu Mar 20 17:02:57 2025
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module ExponentSubtractor_vlg_vec_tst $end
$var reg 8 ! A [7:0] $end
$var reg 8 " B [7:0] $end
$var wire 1 # Cout $end
$var wire 1 $ R [7] $end
$var wire 1 % R [6] $end
$var wire 1 & R [5] $end
$var wire 1 ' R [4] $end
$var wire 1 ( R [3] $end
$var wire 1 ) R [2] $end
$var wire 1 * R [1] $end
$var wire 1 + R [0] $end

$scope module i1 $end
$var wire 1 , gnd $end
$var wire 1 - vcc $end
$var wire 1 . unknown $end
$var tri1 1 / devclrn $end
$var tri1 1 0 devpor $end
$var tri1 1 1 devoe $end
$var wire 1 2 ~QUARTUS_CREATED_GND~I_combout $end
$var wire 1 3 ~QUARTUS_CREATED_UNVM~~busy $end
$var wire 1 4 ~QUARTUS_CREATED_ADC1~~eoc $end
$var wire 1 5 ~QUARTUS_CREATED_ADC2~~eoc $end
$var wire 1 6 R[0]~output_o $end
$var wire 1 7 R[1]~output_o $end
$var wire 1 8 R[2]~output_o $end
$var wire 1 9 R[3]~output_o $end
$var wire 1 : R[4]~output_o $end
$var wire 1 ; R[5]~output_o $end
$var wire 1 < R[6]~output_o $end
$var wire 1 = R[7]~output_o $end
$var wire 1 > Cout~output_o $end
$var wire 1 ? A[0]~input_o $end
$var wire 1 @ B[0]~input_o $end
$var wire 1 A RippleSub|s0|WideOr1~0_combout $end
$var wire 1 B B[7]~input_o $end
$var wire 1 C B[5]~input_o $end
$var wire 1 D A[3]~input_o $end
$var wire 1 E B[3]~input_o $end
$var wire 1 F B[1]~input_o $end
$var wire 1 G A[1]~input_o $end
$var wire 1 H RippleSub|s1|WideOr0~0_combout $end
$var wire 1 I B[2]~input_o $end
$var wire 1 J A[2]~input_o $end
$var wire 1 K RippleSub|s2|WideOr0~0_combout $end
$var wire 1 L RippleSub|s3|WideOr0~0_combout $end
$var wire 1 M B[4]~input_o $end
$var wire 1 N A[4]~input_o $end
$var wire 1 O RippleSub|s4|WideOr0~0_combout $end
$var wire 1 P A[5]~input_o $end
$var wire 1 Q RippleSub|s5|WideOr0~0_combout $end
$var wire 1 R A[6]~input_o $end
$var wire 1 S B[6]~input_o $end
$var wire 1 T RippleSub|s6|WideOr0~0_combout $end
$var wire 1 U A[7]~input_o $end
$var wire 1 V RippleSub|s7|WideOr0~0_combout $end
$var wire 1 W RippleSub|s1|WideOr1~0_combout $end
$var wire 1 X R~8_combout $end
$var wire 1 Y RippleSub|s2|WideOr1~0_combout $end
$var wire 1 Z R~2_combout $end
$var wire 1 [ RippleSub|s3|WideOr1~0_combout $end
$var wire 1 \ twoComplement|twosFor[2].halfADDER_inst1|cout~combout $end
$var wire 1 ] R~3_combout $end
$var wire 1 ^ twoComplement|twosFor[3].halfADDER_inst1|cout~combout $end
$var wire 1 _ RippleSub|s4|WideOr1~0_combout $end
$var wire 1 ` R~4_combout $end
$var wire 1 a RippleSub|s5|WideOr1~0_combout $end
$var wire 1 b R~5_combout $end
$var wire 1 c twoComplement|twosFor[5].halfADDER_inst1|cout~combout $end
$var wire 1 d RippleSub|s6|WideOr1~0_combout $end
$var wire 1 e R~6_combout $end
$var wire 1 f RippleSub|s7|WideOr1~0_combout $end
$var wire 1 g R~7_combout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10011001 !
b10011001 "
1#
0+
0*
0)
0(
0'
0&
0%
0$
0,
1-
x.
1/
10
11
02
z3
z4
z5
06
07
08
09
0:
0;
0<
0=
1>
1?
1@
0A
1B
0C
1D
1E
0F
0G
0H
0I
0J
1K
1L
1M
1N
1O
0P
1Q
0R
0S
1T
1U
1V
0W
0X
0Y
1Z
1[
0\
1]
0^
1_
1`
1a
1b
0c
1d
1e
1f
1g
$end
#1000000
